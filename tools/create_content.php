<?php
// Content Creator Tool - ÿßÿ®ÿ≤ÿßÿ± ÿß€åÿ¨ÿßÿØ ŸÖÿ≠ÿ™Ÿàÿß€å ÿÆŸàÿØ⁄©ÿßÿ±
// Use: php create_content.php

echo "=== Content Creator Tool ===\n\n";

// Check if data directory exists
$dataDir = '../data/posts';
if (!is_dir($dataDir)) {
    mkdir($dataDir, 0755, true);
    echo "Data/posts folder created.\n";
}

// Categories
$categories = [
    'corruption' => 'corruption',
    'mismanagement' => 'mismanagement', 
    'solutions' => 'solutions',
    'education' => 'education',
    'news' => 'news'
];

// Create category directories
foreach ($categories as $catKey => $catName) {
    $catDir = "$dataDir/$catKey";
    if (!is_dir($catDir)) {
        mkdir($catDir, 0755, true);
        echo "Folder $catName created.\n";
    }
}

// Interactive content creation
function createPost(): bool
{
    global $categories, $dataDir;
    
    echo "\n--- Create new post ---\n";

    // Select category
    echo "Select category:\n";
    $i = 1;
    foreach ($categories as $key => $name) {
        echo "$i. $name ($key)\n";
        $i++;
    }
    
    echo "Enter category number: ";
    $categoryNum = (int)trim(fgets(STDIN));
    $categoryKeys = array_keys($categories);
    
    if ($categoryNum < 1 || $categoryNum > count($categoryKeys)) {
        echo "Invalid number!\n";
        return false;
    }
    
    $selectedCategory = $categoryKeys[$categoryNum - 1];
    
    // Get post details
    echo "Post Title: ";
    $title = trim(fgets(STDIN));

    echo "Author Name (optional): ";
    $author = trim(fgets(STDIN));

    echo "Tags (separate with commas): ";
    $tagsInput = trim(fgets(STDIN));
    $tags = $tagsInput ? array_map('trim', explode(',', $tagsInput)) : [];

    echo "Post Text (type '###' to end a newline):\n";
    $content = '';
    while (true) {
        $line = trim(fgets(STDIN));
        if ($line === '###') break;
        $content .= $line . "\n";
    }
    
    // Generate filename
    $filename = generateFilename($title);
    
    // Create post array
    $post = [
        'title' => $title,
        'content' => trim($content),
        'date' => date('Y-m-d'),
        'author' => $author ?: 'ŸÜÿßÿ¥ŸÜÿßÿ≥',
        'tags' => $tags,
        'category' => $selectedCategory,
        'status' => 'published'
    ];
    
    // Save to file
    $filePath = "$dataDir/$selectedCategory/$filename.json";
    if (file_put_contents($filePath, json_encode($post, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE))) {
        echo "\n‚úÖ Post created successfully: $filePath\n";
        return true;
    } else {
        echo "\n‚ùå Error creating post!\n";
        return false;
    }
}

function generateFilename($title) {
    // Convert Persian/Arabic characters to English
    $persian = ['€∞','€±','€≤','€≥','€¥','€µ','€∂','€∑','€∏','€π'];
    $english = ['0','1','2','3','4','5','6','7','8','9'];
    
    $title = str_replace($persian, $english, $title);
    
    // Remove special characters and replace spaces
    $filename = preg_replace('/[^a-zA-Z0-9\s]/', '', $title);
    $filename = preg_replace('/\s+/', '-', trim($filename));
    $filename = strtolower($filename);
    
    // If filename is empty or too short, generate based on date
    if (strlen($filename) < 3) {
        $filename = 'post-' . date('Y-m-d-H-i-s');
    }
    
    return substr($filename, 0, 50); // Limit length
}

function createSampleContent() {
    global $dataDir;
    
    $samplePosts = [
        [
            'category' => 'corruption',
            'filename' => 'sample-corruption-1',
            'data' => [
                'title' => 'ÿßÿÆÿ™ŸÑÿßÿ≥ ÿØÿ± Ÿæÿ±Ÿà⁄òŸá ÿ¢ÿ≤ÿßÿØÿ±ÿßŸá',
                'content' => "ÿ®ÿ± ÿßÿ≥ÿßÿ≥ ÿßÿ≥ŸÜÿßÿØ ÿ®Ÿá ÿØÿ≥ÿ™ ÿ¢ŸÖÿØŸáÿå Ÿæÿ±Ÿà⁄òŸá ÿ¢ÿ≤ÿßÿØÿ±ÿßŸá ⁄©Ÿá ÿ®ÿß ÿ®ŸàÿØÿ¨Ÿá 500 ŸÖ€åŸÑ€åÿßÿ±ÿØ ÿ™ŸàŸÖÿßŸÜ ÿ¢ÿ∫ÿßÿ≤ ÿ¥ÿØÿå ÿ™ÿß⁄©ŸÜŸàŸÜ ÿ®€åÿ¥ ÿßÿ≤ 800 ŸÖ€åŸÑ€åÿßÿ±ÿØ ÿ™ŸàŸÖÿßŸÜ Ÿáÿ≤€åŸÜŸá ÿØÿßÿ¥ÿ™Ÿá ÿßŸÖÿß ÿ™ŸÜŸáÿß 30% Ÿæ€åÿ¥ÿ±ŸÅÿ™ ÿØÿßÿ¥ÿ™Ÿá ÿßÿ≥ÿ™.\n\nŸÜ⁄©ÿßÿ™ ŸÖŸáŸÖ:\n- ŸÇÿ±ÿßÿ±ÿØÿßÿØŸáÿß€å ŸÖÿ¥⁄©Ÿà⁄© ÿ®ÿß ÿ¥ÿ±⁄©ÿ™‚ÄåŸáÿß€å Ÿàÿßÿ®ÿ≥ÿ™Ÿá\n- ÿßŸÅÿ≤ÿß€åÿ¥ ÿ∫€åÿ±ŸÖŸÜÿ∑ŸÇ€å ŸÇ€åŸÖÿ™‚ÄåŸáÿß ÿØÿ± ŸÖŸÜÿßŸÇÿµÿßÿ™\n- ÿπÿØŸÖ ŸÜÿ∏ÿßÿ±ÿ™ ⁄©ÿßŸÅ€å ÿ®ÿ± ÿßÿ¨ÿ±ÿß€å Ÿæÿ±Ÿà⁄òŸá\n\nÿß€åŸÜ Ÿæÿ±Ÿà⁄òŸá ⁄©Ÿá ŸÇÿ±ÿßÿ± ÿ®ŸàÿØ ÿØÿ± 2 ÿ≥ÿßŸÑ ÿ™ŸÖÿßŸÖ ÿ¥ŸàÿØÿå ÿß⁄©ŸÜŸàŸÜ 4 ÿ≥ÿßŸÑ ÿßÿ≤ ÿ¥ÿ±Ÿàÿπ ÿ¢ŸÜ ⁄Øÿ∞ÿ¥ÿ™Ÿá Ÿà ŸáŸÜŸàÿ≤ ŸÜÿßÿ™ŸÖÿßŸÖ ÿßÿ≥ÿ™.",
                'date' => '2024-03-10',
                'author' => '⁄Øÿ±ŸàŸá ÿ™ÿ≠ŸÇ€åŸÇ',
                'tags' => ['ÿßÿÆÿ™ŸÑÿßÿ≥', 'ÿ¢ÿ≤ÿßÿØÿ±ÿßŸá', 'ŸÖŸÜÿßŸÇÿµŸá'],
                'category' => 'corruption',
                'status' => 'published'
            ]
        ],
        [
            'category' => 'mismanagement',
            'filename' => 'sample-management-1',
            'data' => [
                'title' => 'ÿ≥Ÿàÿ°ŸÖÿØ€åÿ±€åÿ™ ÿØÿ± ÿ™Ÿàÿ≤€åÿπ ÿØÿßÿ±Ÿà',
                'content' => "ÿ≥€åÿ≥ÿ™ŸÖ ÿ™Ÿàÿ≤€åÿπ ÿØÿßÿ±Ÿà ÿØÿ± ⁄©ÿ¥Ÿàÿ± ÿ®ÿß ŸÖÿ¥⁄©ŸÑÿßÿ™ ÿ¨ÿØ€å ÿ±Ÿàÿ®ÿ±Ÿà ÿßÿ≥ÿ™ ⁄©Ÿá ÿ±€åÿ¥Ÿá ÿØÿ± ÿ≥Ÿàÿ°ŸÖÿØ€åÿ±€åÿ™ ÿØÿßÿ±ÿØ.\n\nŸÖÿ¥⁄©ŸÑÿßÿ™ ÿßÿµŸÑ€å:\n1. ÿπÿØŸÖ ÿ®ÿ±ŸÜÿßŸÖŸá‚Äåÿ±€åÿ≤€å ÿµÿ≠€åÿ≠ ÿ®ÿ±ÿß€å Ÿàÿßÿ±ÿØÿßÿ™\n2. ÿßŸÜÿ≠ÿµÿßÿ± ÿØÿ± ÿ™Ÿàÿ≤€åÿπ\n3. ŸÇ€åŸÖÿ™‚Äå⁄Øÿ∞ÿßÿ±€å ÿ∫€åÿ±ŸÖŸÜÿ∑ŸÇ€å\n4. ⁄©ŸÖÿ®ŸàÿØ ÿØÿßÿ±ŸàŸáÿß€å ÿ≠€åÿßÿ™€å\n\nÿß€åŸÜ ŸÖÿ≥ÿßÿ¶ŸÑ ŸÖŸàÿ¨ÿ® ÿ±ŸÜÿ¨ ŸÖÿ±ÿØŸÖ Ÿà ÿßŸÅÿ≤ÿß€åÿ¥ Ÿáÿ≤€åŸÜŸá‚ÄåŸáÿß€å ÿØÿ±ŸÖÿßŸÜ ÿ¥ÿØŸá ÿßÿ≥ÿ™.",
                'date' => '2024-03-08',
                'author' => '⁄©ÿßÿ±ÿ¥ŸÜÿßÿ≥ ÿ®ŸáÿØÿßÿ¥ÿ™',
                'tags' => ['ÿØÿßÿ±Ÿà', 'ÿ®ŸáÿØÿßÿ¥ÿ™', 'ŸÖÿØ€åÿ±€åÿ™'],
                'category' => 'mismanagement',
                'status' => 'published'
            ]
        ],
        [
            'category' => 'solutions',
            'filename' => 'sample-solution-1',
            'data' => [
                'title' => 'ÿ±ÿßŸá⁄©ÿßÿ±Ÿáÿß€å ŸÖŸÇÿßÿ®ŸÑŸá ÿ®ÿß ŸÅÿ≥ÿßÿØ ÿßÿØÿßÿ±€å',
                'content' => "ÿ®ÿ±ÿß€å ŸÖŸÇÿßÿ®ŸÑŸá ŸÖÿ§ÿ´ÿ± ÿ®ÿß ŸÅÿ≥ÿßÿØ ÿßÿØÿßÿ±€å ÿ±ÿßŸá⁄©ÿßÿ±Ÿáÿß€å ÿ≤€åÿ± Ÿæ€åÿ¥ŸÜŸáÿßÿØ ŸÖ€å‚Äåÿ¥ŸàÿØ:\n\n1. ÿ¥ŸÅÿßŸÅ€åÿ™ ÿØÿ± ŸÅÿ±ÿ¢€åŸÜÿØŸáÿß\n- ÿßŸÜÿ™ÿ¥ÿßÿ± ÿπŸÖŸàŸÖ€å ŸÇÿ±ÿßÿ±ÿØÿßÿØŸáÿß\n- ⁄Øÿ≤ÿßÿ±ÿ¥‚ÄåÿØŸá€å ŸÖŸÜÿ∏ŸÖ ÿπŸÖŸÑ⁄©ÿ±ÿØ\n- ÿØÿ≥ÿ™ÿ±ÿ≥€å ÿ¢ÿ≤ÿßÿØ ÿ®Ÿá ÿßÿ∑ŸÑÿßÿπÿßÿ™\n\n2. ŸÜÿ∏ÿßÿ±ÿ™ ŸÖÿ±ÿØŸÖ€å\n- ÿ™ÿ¥⁄©€åŸÑ ⁄©ŸÖ€åÿ™Ÿá‚ÄåŸáÿß€å ŸÜÿ∏ÿßÿ±ÿ™€å\n- ÿ≥ÿßŸÖÿßŸÜŸá ⁄Øÿ≤ÿßÿ±ÿ¥ ÿ™ÿÆŸÑŸÅÿßÿ™\n- ÿ≠ŸÖÿß€åÿ™ ÿßÿ≤ ÿßŸÅÿ¥ÿß⁄Øÿ±ÿßŸÜ\n\n3. ÿßÿµŸÑÿßÿ≠ÿßÿ™ ÿ≥ÿßÿÆÿ™ÿßÿ±€å\n- ⁄©ÿßŸáÿ¥ ÿ®Ÿàÿ±Ÿà⁄©ÿ±ÿßÿ≥€å\n- ÿØ€åÿ¨€åÿ™ÿßŸÑ‚Äåÿ≥ÿßÿ≤€å ÿÆÿØŸÖÿßÿ™\n- ÿ™ŸÇŸà€åÿ™ ÿ≥€åÿ≥ÿ™ŸÖ ŸÇÿ∂ÿß€å€å",
                'date' => '2024-03-05',
                'author' => 'ŸÖÿ™ÿÆÿµÿµ ÿ≠⁄©ŸÖÿ±ÿßŸÜ€å',
                'tags' => ['ÿ±ÿßŸá⁄©ÿßÿ±', 'ÿ¥ŸÅÿßŸÅ€åÿ™', 'ŸÜÿ∏ÿßÿ±ÿ™'],
                'category' => 'solutions',
                'status' => 'published'
            ]
        ],
        [
            'category' => 'education',
            'filename' => 'sample-education-1',
            'data' => [
                'title' => 'ÿ≠ŸÇŸàŸÇ ÿ¥Ÿáÿ±ŸàŸÜÿØ€å Ÿà ÿ¢⁄ØÿßŸá€å ÿßÿ≤ ÿ¢ŸÜ',
                'content' => "Ÿáÿ± ÿ¥Ÿáÿ±ŸàŸÜÿØ ÿ≠ŸÇŸàŸÇ ÿßÿ≥ÿßÿ≥€å ÿØÿßÿ±ÿØ ⁄©Ÿá ÿ®ÿß€åÿØ ÿßÿ≤ ÿ¢ŸÜŸáÿß ÿ¢⁄ØÿßŸá ÿ®ÿßÿ¥ÿØ:\n\nüîπ ÿ≠ŸÇ ÿØÿ≥ÿ™ÿ±ÿ≥€å ÿ®Ÿá ÿßÿ∑ŸÑÿßÿπÿßÿ™\nÿ¥ŸÖÿß ÿ≠ŸÇ ÿØÿßÿ±€åÿØ ÿßÿ≤ ŸÜÿ≠ŸàŸá Ÿáÿ≤€åŸÜŸá ÿ®ŸàÿØÿ¨Ÿá ÿπŸÖŸàŸÖ€å ÿ¢⁄ØÿßŸá ÿ®ÿßÿ¥€åÿØ.\n\nüîπ ÿ≠ŸÇ ÿ¥⁄©ÿß€åÿ™ Ÿà ÿßÿπÿ™ÿ±ÿßÿ∂\nŸÖ€å‚Äåÿ™ŸàÿßŸÜ€åÿØ ÿßÿ≤ ÿπŸÖŸÑ⁄©ÿ±ÿØ ŸÖÿ≥ÿ¶ŸàŸÑÿßŸÜ ÿ¥⁄©ÿß€åÿ™ ⁄©ŸÜ€åÿØ.\n\nüîπ ÿ≠ŸÇ ŸÜÿ∏ÿßÿ±ÿ™\nŸÜÿ∏ÿßÿ±ÿ™ ÿ®ÿ± ÿπŸÖŸÑ⁄©ÿ±ÿØ ŸÜŸáÿßÿØŸáÿß€å ÿπŸÖŸàŸÖ€å ÿ≠ŸÇ ŸáŸÖŸá ÿ¥Ÿáÿ±ŸàŸÜÿØÿßŸÜ ÿßÿ≥ÿ™.\n\nüîπ ÿ≠ŸÇ ŸÖÿ¥ÿßÿ±⁄©ÿ™\nÿØÿ± ÿ™ÿµŸÖ€åŸÖÿßÿ™ ŸÖÿ±ÿ®Ÿàÿ∑ ÿ®Ÿá ŸÖÿ≠ŸÑŸá Ÿà ÿ¥Ÿáÿ± ÿ≠ŸÇ ŸÖÿ¥ÿßÿ±⁄©ÿ™ ÿØÿßÿ±€åÿØ.\n\nÿ¢⁄ØÿßŸá€å ÿßÿ≤ ÿß€åŸÜ ÿ≠ŸÇŸàŸÇ ÿßŸàŸÑ€åŸÜ ŸÇÿØŸÖ ÿ®ÿ±ÿß€å ŸÖÿ∑ÿßŸÑÿ®Ÿá ÿ¢ŸÜŸáÿßÿ≥ÿ™.",
                'date' => '2024-03-03',
                'author' => 'ÿ≠ŸÇŸàŸÇÿØÿßŸÜ',
                'tags' => ['ÿ≠ŸÇŸàŸÇ ÿ¥Ÿáÿ±ŸàŸÜÿØ€å', 'ÿ¢⁄ØÿßŸá€å', 'ŸÇÿßŸÜŸàŸÜ'],
                'category' => 'education',
                'status' => 'published'
            ]
        ],
        [
            'category' => 'news',
            'filename' => 'sample-news-1',
            'data' => [
                'title' => 'ÿ≠ŸÇŸàŸÇ ÿ¥Ÿáÿ±ŸàŸÜÿØ€å Ÿà ÿ¢⁄ØÿßŸá€å ÿßÿ≤ ÿ¢ŸÜ',
                'content' => "Ÿáÿ± ÿ¥Ÿáÿ±ŸàŸÜÿØ ÿ≠ŸÇŸàŸÇ ÿßÿ≥ÿßÿ≥€å ÿØÿßÿ±ÿØ ⁄©Ÿá ÿ®ÿß€åÿØ ÿßÿ≤ ÿ¢ŸÜŸáÿß ÿ¢⁄ØÿßŸá ÿ®ÿßÿ¥ÿØ:\n\nüîπ ÿ≠ŸÇ ÿØÿ≥ÿ™ÿ±ÿ≥€å ÿ®Ÿá ÿßÿ∑ŸÑÿßÿπÿßÿ™\nÿ¥ŸÖÿß ÿ≠ŸÇ ÿØÿßÿ±€åÿØ ÿßÿ≤ ŸÜÿ≠ŸàŸá Ÿáÿ≤€åŸÜŸá ÿ®ŸàÿØÿ¨Ÿá ÿπŸÖŸàŸÖ€å ÿ¢⁄ØÿßŸá ÿ®ÿßÿ¥€åÿØ.\n\nüîπ ÿ≠ŸÇ ÿ¥⁄©ÿß€åÿ™ Ÿà ÿßÿπÿ™ÿ±ÿßÿ∂\nŸÖ€å‚Äåÿ™ŸàÿßŸÜ€åÿØ ÿßÿ≤ ÿπŸÖŸÑ⁄©ÿ±ÿØ ŸÖÿ≥ÿ¶ŸàŸÑÿßŸÜ ÿ¥⁄©ÿß€åÿ™ ⁄©ŸÜ€åÿØ.\n\nüîπ ÿ≠ŸÇ ŸÜÿ∏ÿßÿ±ÿ™\nŸÜÿ∏ÿßÿ±ÿ™ ÿ®ÿ± ÿπŸÖŸÑ⁄©ÿ±ÿØ ŸÜŸáÿßÿØŸáÿß€å ÿπŸÖŸàŸÖ€å ÿ≠ŸÇ ŸáŸÖŸá ÿ¥Ÿáÿ±ŸàŸÜÿØÿßŸÜ ÿßÿ≥ÿ™.\n\nüîπ ÿ≠ŸÇ ŸÖÿ¥ÿßÿ±⁄©ÿ™\nÿØÿ± ÿ™ÿµŸÖ€åŸÖÿßÿ™ ŸÖÿ±ÿ®Ÿàÿ∑ ÿ®Ÿá ŸÖÿ≠ŸÑŸá Ÿà ÿ¥Ÿáÿ± ÿ≠ŸÇ ŸÖÿ¥ÿßÿ±⁄©ÿ™ ÿØÿßÿ±€åÿØ.\n\nÿ¢⁄ØÿßŸá€å ÿßÿ≤ ÿß€åŸÜ ÿ≠ŸÇŸàŸÇ ÿßŸàŸÑ€åŸÜ ŸÇÿØŸÖ ÿ®ÿ±ÿß€å ŸÖÿ∑ÿßŸÑÿ®Ÿá ÿ¢ŸÜŸáÿßÿ≥ÿ™.",
                'date' => '2024-03-03',
                'author' => 'ÿ≠ŸÇŸàŸÇÿØÿßŸÜ',
                'tags' => ['ÿ≠ŸÇŸàŸÇ ÿ¥Ÿáÿ±ŸàŸÜÿØ€å', 'ÿ¢⁄ØÿßŸá€å', 'ŸÇÿßŸÜŸàŸÜ'],
                'category' => 'education',
                'status' => 'published'
            ]
        ]
    ];
    
    echo "\nCreating sample content...\n";
    
    foreach ($samplePosts as $post) {
        $filePath = "$dataDir/{$post['category']}/{$post['filename']}.json";
        
        if (!file_exists($filePath)) { 
            if (file_put_contents($filePath, json_encode($post['data'], JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE))) { 
                echo " ‚úÖ {$post['data']['title']}\n"; 
            } else { 
                echo "‚ùå Error creating: {$post['data']['title']}\n"; 
            } 
        } 
        else { 
                echo "‚ö†Ô∏è available: {$post['data']['title']}\n"; 
        }
    }
}

function showMenu() {
    echo "\n=== Main Menu ===\n";
    echo "1. Create a new post\n";
    echo "2. Create sample content\n";
    echo "3. View statistics\n";
    echo "4. Exit\n";
    echo "Select (1-4): ";
}

function showStats() {
    global $categories, $dataDir;
    
    echo "\n=== Content Statistics ===\n";

    $totalPosts = 0;
    foreach ($categories as $catKey => $catName) {
        $catDir = "$dataDir/$catKey";
        $count = 0;

        if (is_dir($catDir)) {
            $files = glob("$catDir/*.json");
            $count = count($files);
        }

        echo "$catName: $count posts\n";
        $totalPosts += $count;
    }

    echo "\nTotal Posts: $totalPosts\n";

    // Show recent posts
    echo "\nRecent Posts:\n";
    $allFiles = glob("$dataDir/*/*.json");
    
    // Sort by modification time
    usort($allFiles, function($a, $b) {
        return filemtime($b) - filemtime($a);
    });
    
    $recentFiles = array_slice($allFiles, 0, 5);
    
    foreach ($recentFiles as $file) {
        $data = json_decode(file_get_contents($file), true);
        if ($data) {
            $category = basename(dirname($file));
            echo "- {$data['title']} ({$categories[$category]} - {$data['date']})\n";
        }
    }
}

// Main execution
while (true) {
    showMenu();
    $choice = trim(fgets(STDIN));
    
    switch ($choice) {
        case '1':
            createPost();
            break;
            
        case '2':
            createSampleContent();
            break;
            
        case '3':
            showStats();
            break;
            
        case '4':
            echo "bye bye!\n";
            exit(0);
            
        default:
            echo "Invalid selection! Please select one of options 1 to 4.\n";
    }
    
    echo "\nPress Enter to continue...";
    fgets(STDIN);
}